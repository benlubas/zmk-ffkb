#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define HOME   0
#define NAV    1
#define SYM    2

&caps_word {
  continue-list = <UNDERSCORE MINUS>;
};

/ {
  combos {
    compatible = "zmk,combos";
    combo_undo {
      timeout-ms = <50>;
      key-positions = <26 27>;
      bindings = <&kp LC(Z)>;
    };
    combo_esc {
      timeout-ms = <50>; 
      key-positions = <16 17>;
      bindings = <&kp ESC>;
    };
    combo_bspc {
      timeout-ms = <50>; 
      key-positions = <12 13>;
      bindings = <&kp BSPC>;
    };
    combo_del {
      timeout-ms = <50>; 
      key-positions = <9 19>;
      bindings = <&kp DEL>;
    };
    combo_tab {
      timeout-ms = <50>; 
      key-positions = <11 13>;
      bindings = <&kp TAB>;
    };
    combo_bootloader {
      timeout-ms = <50>; 
      key-positions = <20 21 22 23>;
      bindings = <&bootloader>;
    };
    combo_rest {
      timeout-ms = <50>; 
      key-positions = <3 4 13 14>;
      bindings = <&reset>;
    };
  };
};

/ {

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &none &kp Q        &kp W &kp E    &kp R   &kp T               &kp Y   &kp U     &kp I      &kp O     &kp P     &none
        &none &kp A        &kp S &kp D    &kp F   &kp G               &kp H   &kp J     &kp K      &kp L     &kp SQT   &none
        &none &mt LSHIFT Z &kp X &kp C    &kp V   &kp B               &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &none
        &none &kp META &sl NAV &kp CTRL            &sl SYM &kp SPACE &kp ALT    &none
        >;
    };

    nav_layer {
      bindings = <
        &trans &kp TAB  &kp N7   &kp N8    &kp N9    &kp MINUS         &kp ASTRK    &kp N7     &kp N8  &kp N9     &kp BSPC  &trans
        &trans &kp H0   &kp N4   &kp N5    &kp N6    &kp ENTER         &kp LEFT     &kp DOWN   &kp UP  &kp RIGHT  &kp N6    &trans
        &trans &trans   &kp N1   &kp N2    &kp N3    &trans            &mo FN       &mo FN     &trans  &trans     &trans    &trans
        &trans &trans &trans &trans     &trans &trans &trans &trans
        >;
    };

    sym_layer {
      bindings = <
        &trans     &kp S(N1)    &kp S(N2)    &kp PLUS        &kp EQUAL        &kp MINUS                                   &kp CARET     &kp AMPS          &kp ASTRK     &kp UNDER   &kp EQUAL   &trans
        &trans     &kp S(N3)    &kp TILDE    &kp LBRC        &kp LPAR         &kp LT                &trans                &kp GT        &kp RPAR          &kp RBRC      &kp RBKT    &kp PLUS    &trans
        &trans     &kp CAPS     &kp GRAVE    &kp LC(LS(TAB)) &kp LC(LG(LEFT)) &caps_word                                  &trans        &kp LC(LG(RIGHT)) &kp LC(TAB)   &trans      &kp BSLH    &trans
        &trans          &trans           &kp RET       &kp DEL        &kp BSPC       &trans        &trans            &trans
        >;
    };

  };
};
